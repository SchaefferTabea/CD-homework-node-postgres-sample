name: Docker

on:
  schedule:
    - cron: '29 11 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: SchaefferTabea/CD-homework-node-postfres-sample


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@b929758a8661a1dc05fce750bdb02eef5acf2c37 
        with:
          cosign-release: 'v1.13.1'


      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@95cefc3c57c7e2ae63996b332541b8a2808e4348
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@40891eba8c2bcd1309b07ba8b11232f313e86779
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@dbbf01822bb698575d92e1ee5b9229d58745b0c6
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}


      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@f9efed53cc1b0364ba947400ac02042bbbaac7fc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}